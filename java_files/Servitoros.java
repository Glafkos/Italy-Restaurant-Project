/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package databaseproject;


import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.Box;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.JLabel;

/**
 *
 * @author Glafkos Nikolaou
 * 
 */
public class Servitoros extends javax.swing.JFrame {

    /**
     * Creates new form Servitoros
     */
    public Servitoros() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        create_customers = new javax.swing.JButton();
        create_orders = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        create_customers.setText("NEW CUSTOMER");
        create_customers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_customersActionPerformed(evt);
            }
        });

        create_orders.setText("CREATE ORDER");
        create_orders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_ordersActionPerformed(evt);
            }
        });

        jButton2.setText("ADD DISHES IN CURRENT ORDER");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(create_orders, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(create_customers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(create_customers)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(create_orders)
                .addGap(40, 40, 40)
                .addComponent(jButton2)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /* CREATE NEW CUSTOMER BUTTON */
    private void create_customersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_customersActionPerformed
        CreateCustomer NewCus = new CreateCustomer();
        NewCus.setVisible(true);
    }//GEN-LAST:event_create_customersActionPerformed
        
    static int table_number;

    /* CREATE NEW ORDER BUTTON */
    private void create_ordersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_ordersActionPerformed
        JTextField Table_number_Field = new JTextField(10);
        JTextField Bonus_Card_id_Field = new JTextField(10);
        JTextField Number_of_people = new JTextField(10);

        JPanel myPanel = new JPanel();
        myPanel.add(new JLabel("Table Number:"));
        myPanel.add(Table_number_Field);
        
        myPanel.add(Box.createHorizontalStrut(15)); // a spacer
        
        myPanel.add(new JLabel("Bonus Card ID:"));
        myPanel.add(Bonus_Card_id_Field);
        
        myPanel.add(Box.createHorizontalStrut(15)); // a spacer
        
        myPanel.add(new JLabel("Number of people:"));
        myPanel.add(Number_of_people);
        
        int result = JOptionPane.showConfirmDialog(null, myPanel, 
               "Please Enter Table Number, Bonus Card and Number of people to create order", JOptionPane.OK_CANCEL_OPTION);
    
        if (result == JOptionPane.OK_OPTION) 
        {
            table_number = Integer.parseInt(Table_number_Field.getText());
            int num_of_people = Integer.parseInt(Number_of_people.getText());
             
            Connection conn = GUI.conn;
            /* Insert query */
            int id_employee = GUI.id;
            
            try
            {
                /* check for bonus card */
                if (Bonus_Card_id_Field.getText().equals(""))
                {
                    Statement st = conn.createStatement(); 
                    st.executeUpdate("INSERT INTO orders (table_number,people,waiter_id) VALUES ("+table_number+","+num_of_people+","+id_employee+")");                    
                }
                else
                {
                    int bonus_card = Integer.parseInt(Bonus_Card_id_Field.getText());
                    Statement st = conn.createStatement(); 
                    st.executeUpdate("INSERT INTO orders (table_number,card_id,people,waiter_id) VALUES ("+table_number+",'"+bonus_card+"',"+num_of_people+","+id_employee+")");
                }
                
                /* show the tables  */
               
                CreateOrder f = new CreateOrder();
                CreateOrder.welcome.setText("Order for table: "+table_number);
                
                showData.show(conn,CreateOrder.dishes,"select * from dishes");
                showData.show(conn,CreateOrder.ingredients,"select * from ingredients");
                showData.show(conn,CreateOrder.drinks,"select * from drinks");
                
                f.setVisible(true);
            }
            catch (Exception ee) 
            {
                System.out.println("\nError\n");
                JOptionPane.showMessageDialog(null,ee);
            }
        } 	
    }//GEN-LAST:event_create_ordersActionPerformed

    /* 
     * BUTTON FOR ADD ITEMS IN SELECTED ORDER
     * YOU CAN SELECT ORDER BY TABLE NUMBER
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JTextField Table_number_Field = new JTextField(10);
        
        JPanel myPanel = new JPanel();
        myPanel.add(new JLabel("Table Number:"));
        myPanel.add(Table_number_Field);
        myPanel.add(Box.createHorizontalStrut(15)); // a spacer
        

        int result = JOptionPane.showConfirmDialog(null, myPanel, 
               "Please Enter Table Number for add dishes or drinks", JOptionPane.OK_CANCEL_OPTION);

        if (result == JOptionPane.OK_OPTION) 
        {
            table_number = Integer.parseInt(Table_number_Field.getText());
          
            try
            {
                Connection conn = GUI.conn;
                
                String g = ("select order_id from orders where table_number = "+table_number+" AND status = 'uncomplete'");

                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery(g);
                int id = 0;
                
                while(rs.next()) 
                {
                    id = rs.getInt("order_id");
                }
                
                if (id == 0)
                {
                    JOptionPane.showMessageDialog(null,"The table not found!");                    
                }
                else
                {
                    /* find order with table number */
                    /* show the tables  */
                    CreateOrder f = new CreateOrder();
                    CreateOrder.welcome.setText("Order for table: "+table_number);
                    
                    showData.show(conn,CreateOrder.dishes,"select * from dishes");
                    showData.show(conn,CreateOrder.ingredients,"select * from ingredients");
                    showData.show(conn,CreateOrder.drinks,"select * from drinks");
                    
                    f.setVisible(true);
                }
            }
            catch (Exception ee) 
            {
                JOptionPane.showMessageDialog(null,ee);
            }
        } 	      
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Servitoros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Servitoros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Servitoros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Servitoros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Servitoros().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton create_customers;
    private javax.swing.JButton create_orders;
    private javax.swing.JButton jButton2;
    // End of variables declaration//GEN-END:variables
}
