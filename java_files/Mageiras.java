/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package databaseproject;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Glafkos Nikolaou
 */
public class Mageiras extends javax.swing.JFrame {

    /**
     * Creates new form Mageiras
     */
    public Mageiras() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        welcome = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        orders = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        dishes_table = new javax.swing.JTable();
        dishes_label = new javax.swing.JLabel();
        ready_button = new javax.swing.JButton();
        extra_ingredients = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        welcome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        orders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Orders"
            }
        ));
        jScrollPane2.setViewportView(orders);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Orders");

        jButton1.setText("SHOW DISHES");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        dishes_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Dishes"
            }
        ));
        jScrollPane3.setViewportView(dishes_table);

        ready_button.setText("READY");
        ready_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ready_buttonActionPerformed(evt);
            }
        });

        extra_ingredients.setText("SHOW INGREDIENTS AND EXTRAS");
        extra_ingredients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extra_ingredientsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(dishes_label, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
                        .addComponent(jScrollPane3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ready_button, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(extra_ingredients, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(468, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(dishes_label, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ready_button)
                    .addComponent(extra_ingredients))
                .addContainerGap(116, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   /* SHOW DISHES OF THE SELECTED ORDER */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        	
        int x = 0;
	int y = orders.getSelectedRow();
        
	String order_id = (String) orders.getValueAt(y, x);
        

        try
	{          
           Connection conn = GUI.conn;
           
           String q = ("SELECT * FROM bill WHERE bill.type = 'dish' AND bill.order_id = "+order_id);
           
           showData.show(conn, dishes_table, q);           
	}
	catch (Exception ee)
	{
            JOptionPane.showMessageDialog(null,ee);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /* BUTTON FOR SHOW EXTRA INGREDIENTS OF THE SELECTED DISH */
    private void extra_ingredientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extra_ingredientsActionPerformed

        int x = 3;
	int y = dishes_table.getSelectedRow();
        
	String name_of_dish = (String) dishes_table.getValueAt(y, x);
        
        int x1 = 0;
	int y1 = orders.getSelectedRow();
        
	String order_id = (String) orders.getValueAt(y1, x1);
        
        try
	{          
           Connection conn = GUI.conn;
             
           String query = ("SELECT id FROM dishes WHERE name = '"+name_of_dish+"'");

           Statement st = conn.createStatement();
          
           int id = 0;
           ResultSet rs = st.executeQuery(query);
           
           if (rs.next())
                id = rs.getInt("id"); 
           
           
           query = ("SELECT name_of_ingredient FROM add_ingredients WHERE order_id = "+order_id+" AND id_of_dish ="+id);
     
           /* show extra ingredients in joptionMessage */
            rs = st.executeQuery(query);
            StringBuffer output = new StringBuffer() ; 

            String name = null;
            
            output.append("Ingredients in: "+name_of_dish+ "\n\n");
            while(rs.next()) 
            {
                name = rs.getString("name_of_ingredient");
                output.append(" "+name+" \n") ;
            }
            
            rs = st.executeQuery("SELECT name_of_ingredient FROM dishes_ingredients WHERE id_of_dishes = "+id);
            while(rs.next()) 
            {
                name = rs.getString("name_of_ingredient");
                output.append(" "+name+" \n") ;
            }
            
            JOptionPane.showMessageDialog(null, output.toString());	
           
	}
	catch (Exception ee)
	{
            JOptionPane.showMessageDialog(null,ee);
        }
        
    }//GEN-LAST:event_extra_ingredientsActionPerformed

    /* BUTTON FOR SET SELECTED DISHES READY */
    private void ready_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ready_buttonActionPerformed
        
        int x = 0;
	int y = orders.getSelectedRow();        
	String order_id = (String) orders.getValueAt(y, x);
        
        int id_magira = GUI.id;
        
	int y1 = dishes_table.getSelectedRow();        
        String id = (String) dishes_table.getValueAt(y1, 0);
        
        try
	{          
           Connection conn = GUI.conn;
           String ready = "READY";
           Statement st = conn.createStatement();
                     
           String sql = "UPDATE bill SET status='"+ready+"'where bill.id='"+id+"'";
           st.executeUpdate(sql);
           
           sql = "UPDATE bill SET id_magira='"+id_magira+"'where bill.id='"+id+"'";
           st.executeUpdate(sql);

           /* the first query for update table */
           String q = ("SELECT * FROM bill WHERE bill.type = 'dish' AND bill.status='anetimo' AND bill.order_id = "+order_id);
           showData.show(conn, dishes_table, q);
           
           int row = dishes_table.getRowCount();
           
           /* if no dishes then alert the waiter of this order and set dishes_status = complete  */
           if ((row == 0))
           {
               String up = ("UPDATE orders SET dishes_status = 'complete' WHERE order_id = "+order_id);
               st.executeUpdate(up);
               
               /* alert the waiter of this order */
               String waiter = ("SELECT table_number,waiter_id FROM orders WHERE order_id = "+order_id);
               st.executeQuery(waiter);
               int table_number = 0;
               int waiter_id = 0;
               ResultSet rs = st.executeQuery(waiter);
               
               if (rs.next())
               {
                   table_number = rs.getInt("table_number");
                   waiter_id = rs.getInt("waiter_id");
               }
               
               /* set all drinks and ingredients of this order as READY */
               up = ("UPDATE bill SET status = 'READY' WHERE order_id = "+order_id);
               st.executeUpdate(up);
               JOptionPane.showMessageDialog(null,"All dishes of the order: "+order_id+ " is READY!\n Waiter with id: "+waiter_id+" serv the dish at "+table_number+ " table!" );                                   
               String query = ("SELECT * FROM orders WHERE orders.dishes_status = 'uncomplete' AND orders.status='uncomplete'");
               showData.show(conn, orders, query);
           }
                   
	}
	catch (Exception ee)
	{
            JOptionPane.showMessageDialog(null,ee);
        }
    }//GEN-LAST:event_ready_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mageiras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mageiras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mageiras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mageiras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mageiras().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dishes_label;
    private javax.swing.JTable dishes_table;
    private javax.swing.JButton extra_ingredients;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    public static javax.swing.JTable orders;
    private javax.swing.JButton ready_button;
    public static javax.swing.JLabel welcome;
    // End of variables declaration//GEN-END:variables
}
